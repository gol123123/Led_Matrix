#include "main.h"


#ifndef __LED_MAT__H__
#define __LED_MAT__H__
#define BufferSize 8
#define NamBuffer 150


uint8_t SPI_MASTER_Buffer_Tx[NamBuffer][BufferSize] = {{0x00, 0x00, 0x66, 0xff, 0xff, 0x7e, 0x3c, 0x18},  //1/////////////////////////////////////
                                                       {0x00, 0x00, 0x00, 0x66, 0x7e, 0x3c, 0x18, 0x00},   //2/// NamBuffer {1-5}               ///
                                                       {0x00, 0x00, 0x00, 0x00, 0x24, 0x7e, 0x18, 0x00},   //3/// serdechkobienie               ///
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00},   //4///1->2->3->4->5->4->3->2->1->2->1///
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   //5/////////////////////////////////////
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x42, 0x24, 0x18},   //6/////////////////////////////////////
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x42, 0x34, 0x18},   //7/// NamBuffer {6-19;1}            ///
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x42, 0x3c, 0x18},   //8/// zapolnenie serdechka          ///
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x62, 0x3c, 0x18},   //9///6->7->8->9->10->11->12->14->14 ///
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x72, 0x3c, 0x18},   //10//15->16->17->18->19->1          ///
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x7a, 0x3c, 0x18},   //11//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0x81, 0x7e, 0x3c, 0x18},   //12//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xc1, 0x7e, 0x3c, 0x18},   //13//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xe1, 0x7e, 0x3c, 0x18},   //14//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xf1, 0x7e, 0x3c, 0x18},   //15//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xf9, 0x7e, 0x3c, 0x18},   //16//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xfd, 0x7e, 0x3c, 0x18},   //17//                               ///
                                                       {0x00, 0x00, 0x66, 0x99, 0xff, 0x7e, 0x3c, 0x18},   //18//                               ///
                                                       {0x00, 0x66, 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x00},   //19////////////////////////////////////
                                                       {0x00, 0x00, 0x00, 0x66, 0xff, 0xff, 0x7e, 0x3c},   //20////////////////////////////////////
                                                       {0x00, 0x00, 0x00, 0x00, 0x66, 0xff, 0xff, 0x7e},   //21// NamBuffer {19-24;1}           ///
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xff, 0xff},   //22// serdechko wniz                ///
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0xff},   //23//19->1->20->21->22->23->24      ///
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66},   //24//
                                                       {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},	 //25////////////////////////////////////
                                                       {0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   //26// NamBuffer {25-39}             ///
                                                       {0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   //27// dogdik                        ///
                                                       {0x11, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00},   //28// 25>>40  ->  zikl 33>>40       ///
                                                       {0x21, 0x11, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00},   //29//                               ///
                                                       {0x88, 0x21, 0x11, 0x04, 0x40, 0x00, 0x00, 0x00},   //30//                               ///
                                                       {0x00, 0x88, 0x21, 0x11, 0x04, 0x40, 0x00, 0x00},   //31//                               ///
                                                       {0x44, 0x00, 0x88, 0x21, 0x11, 0x04, 0x40, 0x00},   //32//                               ///
                                                       {0x28, 0x44, 0x00, 0x88, 0x21, 0x11, 0x04, 0x40},   //33//                               ///
                                                       {0x40, 0x28, 0x44, 0x00, 0x88, 0x21, 0x11, 0x04},   //34//                               ///
                                                       {0x04, 0x40, 0x28, 0x44, 0x00, 0x88, 0x21, 0x11},   //35//                               ///
                                                       {0x11, 0x04, 0x40, 0x28, 0x44, 0x00, 0x88, 0x21},   //36//                               ///
                                                       {0x21, 0x11, 0x04, 0x40, 0x28, 0x44, 0x00, 0x88},   //37//                               ///
                                                       {0x88, 0x21, 0x11, 0x04, 0x40, 0x28, 0x44, 0x00},   //38//                               ///
                                                       {0x00, 0x88, 0x21, 0x11, 0x04, 0x40, 0x28, 0x44},   //39//                               ///
                                                       {0x44, 0x00, 0x88, 0x21, 0x11, 0x04, 0x40, 0x28},   //40//                               ///
                                                       {0x28, 0x44, 0x00, 0x88, 0x21, 0x11, 0x04, 0x40},   //41////////////////////////////////////
                                                       {0x3C, 0x42, 0xA5, 0x81, 0xA5, 0x99, 0x42, 0x3C},   //42//                               //
                                                       {0x3C, 0x42, 0xA5, 0x81, 0xBD, 0x81, 0x42, 0x3C},   //43//                               //
                                                       {0x3C, 0x42, 0xA5, 0x81, 0xBD, 0x99, 0x42, 0x3C},}; 
																					 
uint8_t MAX7219_Dot_Matrix_font[162][8] = {
   {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00} ,  // 0x20, Space // 32 символ по ASCII	// 0 эллемент массива
   {0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04} ,  // 0x21, ! 
   {0x00, 0x09, 0x09, 0x12, 0x00, 0x00, 0x00, 0x00} ,  // 0x22, " 
   {0x00, 0x0a, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x0a} ,  // 0x23, # 
   {0x00, 0x04, 0x0f, 0x14, 0x0e, 0x05, 0x1e, 0x04} ,  // 0x24, $ 
   {0x00, 0x19, 0x19, 0x02, 0x04, 0x08, 0x13, 0x13} ,  // 0x25, % 
   {0x00, 0x04, 0x0a, 0x0a, 0x0a, 0x15, 0x12, 0x0d} ,  // 0x26, & 
   {0x00, 0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00} ,  // 0x27, ' 
   {0x00, 0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02} ,  // 0x28, ( 
   {0x00, 0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08} ,  // 0x29, ) 
   {0x00, 0x04, 0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x04} ,  // 0x2a, * 
   {0x00, 0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00} ,  // 0x2b, + 
   {0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x08} ,  // 0x2c, , 
   {0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00} ,  // 0x2d, - 
   {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c} ,  // 0x2e, . 
   {0x00, 0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x10} ,  // 0x2f, / 
   {0x00, 0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e} ,  // 0x30, 0 
   {0x00, 0x04, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x0e} ,  // 0x31, 1 
   {0x00, 0x0e, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1f} ,  // 0x32, 2 
   {0x00, 0x0e, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0e} ,  // 0x33, 3 
   {0x00, 0x02, 0x06, 0x0a, 0x12, 0x1f, 0x02, 0x02} ,  // 0x34, 4 
   {0x00, 0x1f, 0x10, 0x1e, 0x01, 0x01, 0x11, 0x0e} ,  // 0x35, 5 
   {0x00, 0x06, 0x08, 0x10, 0x1e, 0x11, 0x11, 0x0e} ,  // 0x36, 6 
   {0x00, 0x1f, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08} ,  // 0x37, 7 
   {0x00, 0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e} ,  // 0x38, 8 
   {0x00, 0x0e, 0x11, 0x11, 0x0f, 0x01, 0x02, 0x0c} ,  // 0x39, 9 
   {0x00, 0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x0c, 0x00} ,  // 0x3a, : 
   {0x00, 0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x04, 0x08} ,  // 0x3b, ; 
   {0x00, 0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02} ,  // 0x3c, < 
   {0x00, 0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x00} ,  // 0x3d, = 
   {0x00, 0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08} ,  // 0x3e, > 
   {0x00, 0x0e, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04} ,  // 0x3f, ? 
   {0x00, 0x0e, 0x11, 0x17, 0x15, 0x17, 0x10, 0x0f} ,  // 0x40, @ 
   {0x00, 0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11} ,  // 0x41, A 
   {0x00, 0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e} ,  // 0x42, B 
   {0x00, 0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e} ,  // 0x43, C 
   {0x00, 0x1e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1e} ,  // 0x44, D 
   {0x00, 0x1f, 0x10, 0x10, 0x1c, 0x10, 0x10, 0x1f} ,  // 0x45, E 
   {0x00, 0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10} ,  // 0x46, F 
   {0x00, 0x0e, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0f} ,  // 0x37, G 
   {0x00, 0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11} ,  // 0x48, H 
   {0x00, 0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e} ,  // 0x49, I 
   {0x00, 0x1f, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c} ,  // 0x4a, J 
   {0x00, 0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11} ,  // 0x4b, K 
   {0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f} ,  // 0x4c, L 
   {0x00, 0x11, 0x1b, 0x15, 0x11, 0x11, 0x11, 0x11} ,  // 0x4d, M 
   {0x00, 0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11} ,  // 0x4e, N 
   {0x00, 0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e} ,  // 0x4f, O 
   {0x00, 0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10} ,  // 0x50, P 
   {0x00, 0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d} ,  // 0x51, Q 
   {0x00, 0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11} ,  // 0x52, R 
   {0x00, 0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e} ,  // 0x53, S 
   {0x00, 0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04} ,  // 0x54, T 
   {0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e} ,  // 0x55, U 
   {0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04} ,  // 0x56, V 
   {0x00, 0x11, 0x11, 0x11, 0x15, 0x15, 0x1b, 0x11} ,  // 0x57, W 
   {0x00, 0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11} ,  // 0x58, X 
   {0x00, 0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04} ,  // 0x59, Y 
   {0x00, 0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f} ,  // 0x5a, Z 
   {0x00, 0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e} ,  // 0x5b, [ 
   {0x00, 0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x01} ,  // 0x5c, \ 
   {0x00, 0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e} ,  // 0x5d, ] 
   {0x00, 0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00} ,  // 0x5e, ^ 
   {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f} ,  // 0x5f, _ 
   {0x00, 0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00} ,  // 0x60, ` 
   {0x00, 0x00, 0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d} ,  // 0x61, a 
   {0x00, 0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c} ,  // 0x62, b 
   {0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x10, 0x0e} ,  // 0x63, c 
   {0x00, 0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07} ,  // 0x64, d 
   {0x00, 0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f} ,  // 0x65, e 
   {0x00, 0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08} ,  // 0x66, f 
   {0x00, 0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e} ,  // 0x67, g 
   {0x00, 0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11} ,  // 0x68, h 
   {0x00, 0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e} ,  // 0x69, i 
   {0x00, 0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c} ,  // 0x6a, j 
   {0x00, 0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12} ,  // 0x6b, k 
   {0x00, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04} ,  // 0x6c, l 
   {0x00, 0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11} ,  // 0x6d, m 
   {0x00, 0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11} ,  // 0x6e, n 
   {0x00, 0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e} ,  // 0x6f, o 
   {0x00, 0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10} ,  // 0x70, p 
   {0x00, 0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01} ,  // 0x71, q 
   {0x00, 0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10} ,  // 0x72, r 
   {0x00, 0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e} ,  // 0x73, s 
   {0x00, 0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06} ,  // 0x74, t 
   {0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d} ,  // 0x75, u 
   {0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04} ,  // 0x76, v 
   {0x00, 0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a} ,  // 0x77, w 
   {0x00, 0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11} ,  // 0x78, x 
   {0x00, 0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e} ,  // 0x79, y 
   {0x00, 0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f} ,  // 0x7a, z 
   {0x00, 0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06} ,  // 0x7b, { 
   {0x00, 0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04} ,  // 0x7c, | 
   {0x00, 0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c} ,  // 0x7d, } 
   {0x00, 0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00} ,  // 0x7e, ~ 
   {0x00, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f} ,  // 0x7f, DEL 	// 127 символ по ASCII	// 95 эллемент массива
      
   ////////  русские символы  ///////////////////////////////////////////////////////////
	{0x00, 0x07, 0x09, 0x11, 0x1F, 0x11, 0x11, 0x11}, // ; А		// 192 символ по ASCII  // 96 эллемент массива
	{0x00, 0x1E, 0x10, 0x10, 0x1E, 0x11, 0x11, 0x1E}, // ; Б
	{0x00, 0x1E, 0x11, 0x11, 0x1E, 0x11, 0x11, 0x1E}, // ; В
	{0x00, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10}, // ; Г
	{0x00, 0x06, 0x0A, 0x0A, 0x0A, 0x0A, 0x1F, 0x11}, // ; Д
	{0x00, 0x1F, 0x10, 0x10, 0x1E, 0x10, 0x10, 0x1F}, // ; Е
	{0x00, 0x15, 0x15, 0x15, 0x0E, 0x15, 0x15, 0x15}, // ; Ж
	{0x00, 0x0E, 0x11, 0x02, 0x06, 0x01, 0x11, 0x0E}, // ; З
	{0x00, 0x11, 0x11, 0x11, 0x13, 0x15, 0x19, 0x11}, // ; И
	{0x00, 0x0A, 0x15, 0x11, 0x13, 0x15, 0x19, 0x11}, // ; Й
	{0x00, 0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11}, // ; К
	{0x00, 0x03, 0x05, 0x09, 0x09, 0x09, 0x09, 0x11}, // ; Л
	{0x00, 0x11, 0x1B, 0x15, 0x11, 0x11, 0x11, 0x11}, // ; М
	{0x00, 0x11, 0x11, 0x11, 0x1F, 0x11, 0x11, 0x11}, // ; Н
	{0x00, 0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E}, // ; О
	{0x00, 0x1F, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11}, // ; П
	{0x00, 0x1E, 0x11, 0x11, 0x1E, 0x10, 0x10, 0x10}, // ; Р
	{0x00, 0x0E, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0E}, // ; С
	{0x00, 0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04}, // ; Т
	{0x00, 0x11, 0x11, 0x11, 0x0F, 0x01, 0x11, 0x0E}, // ; У
	{0x00, 0x0E, 0x15, 0x15, 0x15, 0x0E, 0x04, 0x04}, // ; Ф
	{0x00, 0x11, 0x11, 0x0A, 0x04, 0x0A, 0x11, 0x11}, // ; Х
	{0x00, 0x12, 0x12, 0x12, 0x12, 0x12, 0x1F, 0x01}, // ; Ц
	{0x00, 0x11, 0x11, 0x11, 0x0F, 0x01, 0x01, 0x01}, // ; Ч
	{0x00, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x1F}, // ; Ш
	{0x00, 0x15, 0x15, 0x15, 0x15, 0x15, 0x1F, 0x01}, // ; Щ
	{0x00, 0x18, 0x08, 0x08, 0x0E, 0x09, 0x09, 0x0E}, // ; Ъ
	{0x00, 0x11, 0x11, 0x11, 0x19, 0x15, 0x15, 0x19}, // ; Ы
	{0x00, 0x10, 0x10, 0x10, 0x1E, 0x11, 0x11, 0x1E}, // ; Ь
	{0x00, 0x0E, 0x11, 0x01, 0x0F, 0x01, 0x11, 0x0E}, // ; Э
	{0x00, 0x12, 0x15, 0x15, 0x1D, 0x15, 0x15, 0x12}, // ; Ю
	{0x00, 0x0F, 0x11, 0x11, 0x0F, 0x05, 0x09, 0x11}, // ; Я
	{0x00, 0x00, 0x00, 0x0E, 0x12, 0x12, 0x12, 0x0D}, // ; а
	{0x00, 0x01, 0x0E, 0x10, 0x0E, 0x11, 0x11, 0x0E}, // ; б
	{0x00, 0x00, 0x00, 0x0E, 0x09, 0x0E, 0x09, 0x0E}, // ; в
	{0x00, 0x00, 0x00, 0x0F, 0x08, 0x08, 0x08, 0x08}, // ; г
	{0x00, 0x00, 0x00, 0x06, 0x0A, 0x0A, 0x1F, 0x11}, // ; д
	{0x00, 0x00, 0x00, 0x0E, 0x11, 0x1F, 0x10, 0x0E}, // ; е
	{0x00, 0x00, 0x00, 0x15, 0x15, 0x0E, 0x15, 0x15}, // ; ж
	{0x00, 0x00, 0x00, 0x0E, 0x01, 0x06, 0x01, 0x0E}, // ; з
	{0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0D}, // ; и
	{0x00, 0x00, 0x02, 0x15, 0x11, 0x11, 0x13, 0x0D}, // ; й
	{0x00, 0x00, 0x00, 0x13, 0x14, 0x18, 0x14, 0x13}, // ; к
	{0x00, 0x00, 0x00, 0x07, 0x09, 0x09, 0x09, 0x11}, // ; л
	{0x00, 0x00, 0x00, 0x11, 0x1B, 0x15, 0x11, 0x11}, // ; м
	{0x00, 0x00, 0x00, 0x11, 0x11, 0x1F, 0x11, 0x11}, // ; н
	{0x00, 0x00, 0x00, 0x0E, 0x11, 0x11, 0x11, 0x0E}, // ; о
	{0x00, 0x00, 0x00, 0x1F, 0x11, 0x11, 0x11, 0x11}, // ; п
	{0x00, 0x00, 0x00, 0x1E, 0x11, 0x11, 0x1E, 0x10}, // ; р
	{0x00, 0x00, 0x00, 0x0E, 0x11, 0x10, 0x11, 0x0E}, // ; с
	{0x00, 0x00, 0x00, 0x1F, 0x04, 0x04, 0x04, 0x04}, // ; т
	{0x00, 0x00, 0x00, 0x11, 0x11, 0x0F, 0x11, 0x0E}, // ; у
	{0x00, 0x00, 0x04, 0x0E, 0x15, 0x0E, 0x04, 0x04}, // ; ф
	{0x00, 0x00, 0x00, 0x11, 0x0A, 0x04, 0x0A, 0x11}, // ; х
	{0x00, 0x00, 0x00, 0x12, 0x12, 0x12, 0x1F, 0x01}, // ; ц
	{0x00, 0x00, 0x00, 0x11, 0x11, 0x0F, 0x01, 0x01}, // ; ч
	{0x00, 0x00, 0x00, 0x15, 0x15, 0x15, 0x15, 0x1F}, // ; ш
	{0x00, 0x00, 0x00, 0x15, 0x15, 0x15, 0x1F, 0x01}, // ; щ
	{0x00, 0x00, 0x00, 0x18, 0x08, 0x0E, 0x09, 0x0E}, // ; ъ
	{0x00, 0x00, 0x00, 0x11, 0x11, 0x1D, 0x13, 0x1D}, // ; ы
	{0x00, 0x00, 0x00, 0x08, 0x08, 0x0E, 0x09, 0x0E}, // ; ь
	{0x00, 0x00, 0x00, 0x0E, 0x11, 0x07, 0x11, 0x0E}, // ; э
	{0x00, 0x00, 0x00, 0x12, 0x15, 0x1D, 0x15, 0x12}, // ; ю
	{0x00, 0x00, 0x00, 0x0F, 0x11, 0x0F, 0x03, 0x0D},  // ; я	// 255 символ по ASCII	// 159 эллемент массива
	
	//////////  спец символы и символы которые не включены в указанные выше диапазон таблицы  //////////////
	
	////// символы буквы Ё и ё отдельно  //// -------------------------------------------- 
  {0x00, 0x0A, 0x1F, 0x10, 0x1E, 0x10, 0x10, 0x1F}, // ; Ё 	// 168 символ по ASCII  - 160 эллемент массива
	{0x00, 0x0A, 0x00, 0x0E, 0x11, 0x1F, 0x10, 0x0E}  // ; ё	// 184 символ по ASCII  - 161 эллемент массива
	//------------------------------------------------------------------------------------
};  //   ????? MAX7219_Dot_Matrix_font
/*																								 
////SPI_MASTER_Buffer_Tx[0][8];;;//SPI_MASTER_Buffer_Tx[1][8];;;;//SPI_MASTER_Buffer_Tx[3][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///01100110///            ///00000000///            ///00000000///   
//       ///11111111///            ///01100110///            ///00000000/// 
//       ///11111111///            ///11111111///            ///00100100/// 
//       ///01111110///            ///00111100///            ///01111110/// 
//       ///00111100///            ///00011000///            ///00011000///
//       ///00011000///            ///00000000///            ///00000000///  
////SPI_MASTER_Buffer_Tx[4][8];;;//SPI_MASTER_Buffer_Tx[5][8];;;;//SPI_MASTER_Buffer_Tx[6][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///01100110///            ///01100110///
//       ///00000000///            ///10011001///            ///10011001/// 
//       ///00000000///            ///10000001///            ///10000001/// 
//       ///00011000///            ///01000010///            ///01000010/// 
//       ///00000000///            ///00100100///            ///00110100///
//       ///00000000///            ///00011000///            ///00011000///  
////SPI_MASTER_Buffer_Tx[7][8];;;//SPI_MASTER_Buffer_Tx[8][8];;;;//SPI_MASTER_Buffer_Tx[9][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///01100110///            ///01100110///            ///01100110///
//       ///10011001///            ///10011001///            ///10011001/// 
//       ///10000001///            ///10000001///            ///10000001/// 
//       ///01000010///            ///01100010///            ///01110010/// 
//       ///00111100///            ///00111100///            ///00111100///
//       ///00011000///            ///00011000///            ///00011000///  
////SPI_MASTER_Buffer_Tx[10][8];;;//SPI_MASTER_Buffer_Tx[11][8];;;;//SPI_MASTER_Buffer_Tx[12][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///01100110///            ///01100110///            ///01100110///
//       ///10011001///            ///10011001///            ///10011001/// 
//       ///10000001///            ///10000001///            ///11000001/// 
//       ///01111010///            ///01111110///            ///01111110/// 
//       ///00111100///            ///00111100///            ///00111100///
//       ///00011000///            ///00011000///            ///00011000///  
////SPI_MASTER_Buffer_Tx[13][8];;;//SPI_MASTER_Buffer_Tx[14][8];;;;//SPI_MASTER_Buffer_Tx[15][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///01100110///            ///01100110///            ///01100110///
//       ///10011001///            ///10011001///            ///10011001/// 
//       ///11100001///            ///11110001///            ///11111001/// 
//       ///01111110///            ///01111110///            ///01111110/// 
//       ///00111100///            ///00111100///            ///00111100///
//       ///00011000///            ///00011000///            ///00011000///  
////SPI_MASTER_Buffer_Tx[16][8];;;//SPI_MASTER_Buffer_Tx[17][8];;;;//SPI_MASTER_Buffer_Tx[18][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///01100110///
//       ///01100110///            ///01100110///            ///11111111///
//       ///10011001///            ///10011001///            ///11111111/// 
//       ///11111101///            ///11111111///            ///01111110/// 
//       ///01111110///            ///01111110///            ///00111100/// 
//       ///00111100///            ///00111100///            ///00011000///
//       ///00011000///            ///00011000///            ///00000000///  
////SPI_MASTER_Buffer_Tx[19][8];;;//SPI_MASTER_Buffer_Tx[20][8];;;;//SPI_MASTER_Buffer_Tx[21][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000///
//       ///01100110///            ///00000000///            ///00000000/// 
//       ///11111111///            ///01100110///            ///00000000/// 
//       ///11111111///            ///11111111///            ///01100110/// 
//       ///01111110///            ///11111111///            ///11111111///
//       ///00111100///            ///01111110///            ///11111111///  
////SPI_MASTER_Buffer_Tx[22][8];;;//SPI_MASTER_Buffer_Tx[23][8];;;;//SPI_MASTER_Buffer_Tx[24][8];        
//       ///00000000///            ///00000000///            ///01000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///01100110///            ///00000000///            ///00000000///
//       ///11111111///            ///01100110///            ///00000000///  
////SPI_MASTER_Buffer_Tx[25][8];;;//SPI_MASTER_Buffer_Tx[26][8];;;;//SPI_MASTER_Buffer_Tx[27][8];        
//       ///00001000///            ///10000010///            ///00100001///      
//       ///01000000///            ///00001000///            ///10000010///
//       ///00000000///            ///01000000///            ///00001000///
//       ///00000000///            ///00000000///            ///01000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000///  
////SPI_MASTER_Buffer_Tx[28][8];;;//SPI_MASTER_Buffer_Tx[29][8];;;;//SPI_MASTER_Buffer_Tx[30][8];        
//       ///10001000///            ///00000000///            ///00000000///      
//       ///00000001///            ///10001000///            ///00000000///
//       ///10000010///            ///00000001///            ///10001000///
//       ///00001000///            ///10000010///            ///00000001/// 
//       ///01000000///            ///00001000///            ///10000010/// 
//       ///00000000///            ///01000000///            ///00001000/// 
//       ///00000000///            ///00000000///            ///01000000///
//       ///00000000///            ///00000000///            ///00000000///  
////SPI_MASTER_Buffer_Tx[31][8];;;//SPI_MASTER_Buffer_Tx[32][8];;;;//SPI_MASTER_Buffer_Tx[33][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000///
//       ///10001000///            ///00000000///            ///00000000/// 
//       ///00000001///            ///10001000///            ///00000000/// 
//       ///10000010///            ///00000001///            ///10001000/// 
//       ///00001000///            ///10000010///            ///00000001///
//       ///01000000///            ///00010000///            ///10000010/// 
////SPI_MASTER_Buffer_Tx[34][8];;;//SPI_MASTER_Buffer_Tx[35][8];;;;//SPI_MASTER_Buffer_Tx[36][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000///
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///00000000///            ///00000000///            ///00000000/// 
//       ///10001000///            ///00000000///            ///00000000///
//       ///00000001///            ///10001000///            ///00000000///
////SPI_MASTER_Buffer_Tx[34][8];;;//SPI_MASTER_Buffer_Tx[35][8];;;;//SPI_MASTER_Buffer_Tx[36][8];        
//       ///00000000///            ///00000000///            ///00000000///      
//       ///00000000///            ///00000000///            ///01010000///
//       ///11110000///            ///01111000///            ///00000000///
//       ///10001000///            ///11000000///            ///11111000/// 
//       ///11110000///            ///10000000///            ///10000000/// 
//       ///10001000///            ///10000000///            ///11111000/// 
//       ///10001000///            ///11000000///            ///10000000///
//       ///11110000///            ///01111100///            ///11111000///






*/

#endif
